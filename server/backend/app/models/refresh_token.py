from datetime import UTC, datetime
from uuid import uuid4

from sqlalchemy import UUID, Boolean, Column, DateTime, ForeignKey, String

from app.db.base import Base


class RefreshToken(Base):
    """
    Represents a refresh token entity in the database.

    Attributes:
        uuid (UUID): The unique identifier for the refresh token, generated by default using `uuid4`.
        client_uuid (UUID): The UUID of the associated client. This is a foreign key referencing the `clients` table.
        jti (str): The unique identifier for the token (JWT ID). Must be unique.
        issued_at (datetime): The timestamp when the token was issued. Defaults to the current UTC time.
        expires_at (datetime): The timestamp when the token expires. This field is required.
        revoked (bool): Indicates whether the token has been revoked. Defaults to False.
    """

    __tablename__ = "refresh_tokens"
    uuid = Column(UUID(as_uuid=True), primary_key=True, default=uuid4)
    client_uuid = Column(
        UUID(as_uuid=True),
        ForeignKey("clients.uuid", ondelete="CASCADE"),
        nullable=False,
        index=True,
    )
    jti = Column(String, nullable=False, unique=True)
    issued_at = Column(
        DateTime, nullable=False, default=lambda: datetime.now(UTC).replace(tzinfo=None)
    )
    expires_at = Column(DateTime, nullable=False)
    revoked = Column(Boolean, nullable=False, default=False)
